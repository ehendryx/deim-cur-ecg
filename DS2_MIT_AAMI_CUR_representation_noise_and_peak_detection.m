% This script generates AAMI annotation results from the results
% generated by DS2_MIT_CUR_total_rep_results_noise_and_peak_detection.m.

% Results figures are automatically generated and the corresponding results
% tables are saved in the current directory.

% This code is under a 3-Clause BSD License.
% Copyright 2017, E. Hendryx
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Peak detection options
peak_detect{1} = 'annote';
peak_detect{2} = 'simple';

% Noise levels to test
SNR = [-6 0 6 12 18 24];
SNR_text{1} = 'n6';
SNR_text{2} = '0';
SNR_text{3} = '6';
SNR_text{4} = '12';
SNR_text{5} = '18';
SNR_text{6} = '24';

% Noise types
noise_type{1} = 'em';
noise_type{2} = 'ma';
noise_type{3} = 'bw';
noise_type{4} = 'none';

% The CUR tolerances used in generating results (recall that these values
% are divided by 10 prior to being input into the incremental QR code)
CUR_stopping_tol = 5e-2;

% Loop through beat delineation methods
for pd = 1:2
    
    % Initialize figure for delineation type
    noise_figure = figure;
    
    % Loop through noise types
    for ns = 1:4
        
        % Initialize results matrices taking into account type of noise
        if ns == 4
            AAMI_total_annote_rep_distrib = zeros(1,5);
            AAMI_total_annote_CUR_found = zeros(1,5);
            AAMI_annote_percent_correct = zeros(1,5);
            
            AAMI_thresh_total_annote_rep_distrib = zeros(1,5);
            AAMI_thresh_total_annote_CUR_found = zeros(1,5);
            AAMI_thresh_annote_percent_correct = zeros(1,5);
            
        else
            
            AAMI_total_annote_rep_distrib = zeros(length(SNR),5);
            AAMI_total_annote_CUR_found = zeros(length(SNR),5);
            AAMI_annote_percent_correct = zeros(length(SNR),5);
            
            AAMI_thresh_total_annote_rep_distrib = zeros(length(SNR),5);
            AAMI_thresh_total_annote_CUR_found = zeros(length(SNR),5);
            AAMI_thresh_annote_percent_correct = zeros(length(SNR),5);
        end
        
        % Loop through different signal-to-noise ratios
        for nr = 1:length(SNR)
            
            % If no noise is added, don't loop through all SNRs
            if ns == 4 && nr > 1
                continue
            else
                
                % Load representation results
                if ns == 4
                    load(['DS2_MIT_CUR_correct_annotation_ident_results_no_noise_' peak_detect{pd} '_peak_detect'])
                else
                    load(['DS2_MIT_CUR_correct_annotation_ident_results_' SNR_text{nr} 'db_' noise_type{ns} '_noise_' peak_detect{pd} '_peak_detect'])
                end
                
                % Loaded results should have the following fields (as well as corresponding
                % results for only those annotaions represented by 3 or more beats)
                % % results.patient_beat_count % number of beats considered for each patient
                % % results.total_annotations % the beat annotations present in this data set
                % %
                % % results.patient_annote_data_count % the number of beats with a particular annotation per patient
                % % results.total_annote_data_count % total number of beats with a particular annotation in the data set
                % % results.patient_annote_CUR_rep % whether or not a patient has an annotation represented in CUR results
                % % results.patient_annote_CUR_count % number of beats with an annotation selected in CUR
                % % results.total_annote_rep_distrib  % how many patients have an annotation
                % % results.total_annote_CUR_found  % how many patients have an annotation represented in CUR results
                % % results.total_annote_percent_correct  % fraction of patients with annotation that have it represented in CUR results
                
                % AAMI Classes:
                % % N = N, L, R, e, j
                % % S = A, a, J, S
                % % V = V, E
                % % F = F
                % % Q = /, f, Q
                
                AAMI_class_indices{1} = [];
                AAMI_class_indices{2} = [];
                AAMI_class_indices{3} = [];
                AAMI_class_indices{4} = [];
                AAMI_class_indices{5} = [];
                
                % Find index mapping from original PhysioNet labels to AAMI system
                for i = 1:length(results.total_annotations)
                    if strcmp(results.total_annotations{i},'N') || strcmp(results.total_annotations{i},'L') || strcmp(results.total_annotations{i},'R') || strcmp(results.total_annotations{i},'e') || strcmp(results.total_annotations{i},'j')
                        AAMI_class_indices{1} = [AAMI_class_indices{1} i];
                    elseif strcmp(results.total_annotations{i},'A') || strcmp(results.total_annotations{i},'a') || strcmp(results.total_annotations{i},'J') || strcmp(results.total_annotations{i},'S')
                        AAMI_class_indices{2} = [AAMI_class_indices{2} i];
                    elseif strcmp(results.total_annotations{i},'V') || strcmp(results.total_annotations{i},'E')
                        AAMI_class_indices{3} = [AAMI_class_indices{3} i];
                    elseif strcmp(results.total_annotations{i},'F')
                        AAMI_class_indices{4} = [AAMI_class_indices{4} i];
                    elseif strcmp(results.total_annotations{i},'/') || strcmp(results.total_annotations{i},'f') || strcmp(results.total_annotations{i},'Q')
                        AAMI_class_indices{5} = [AAMI_class_indices{5} i];
                    end
                end
                
                % Translate results from CUR beat selection to AAMI scheme
                AAMI_patient_annote_data_count = cell(1,5);
                AAMI_patient_CUR_rep = cell(1,5);
                
                for j = 1:length(AAMI_class_indices)
                    AAMI_patient_annote_data_count{j} = zeros(1,22);
                    AAMI_patient_CUR_rep{j} = zeros(length(CUR_stopping_tol),22);
                    for k = 1:length(AAMI_class_indices{j})
                        AAMI_patient_annote_data_count{j} = AAMI_patient_annote_data_count{j} + results.patient_annote_data_count{AAMI_class_indices{j}(k)};
                        temp = results.patient_annote_CUR_count{1,AAMI_class_indices{j}(k)};
                        temp(isnan(results.patient_annote_CUR_count{1,AAMI_class_indices{j}(k)})) = 0;
                        AAMI_patient_CUR_rep{j} = AAMI_patient_CUR_rep{j} + temp;
                    end
                    
                    AAMI_total_annote_rep_distrib(nr,j) = sum(AAMI_patient_annote_data_count{j} > 0);
                    AAMI_total_annote_CUR_found(nr,j) = sum(AAMI_patient_CUR_rep{j} > 0,2);
                    AAMI_annote_percent_correct(nr,j) = (AAMI_total_annote_CUR_found(nr,j)/AAMI_total_annote_rep_distrib(nr,j))*100;
                end
                
                % Considering only those files w/ 3 or more class representatives present
                % under original PhysioNet labeling
                AAMI_thresh_patient_annote_data_count = cell(1,5);
                AAMI_thresh_patient_CUR_rep = cell(1,5);
                
                for j = 1:length(AAMI_class_indices)
                    AAMI_thresh_patient_annote_data_count{j} = zeros(1,22);
                    AAMI_thresh_patient_CUR_rep{j} = zeros(length(CUR_stopping_tol),22);
                    for k = 1:length(AAMI_class_indices{j})
                        AAMI_thresh_patient_annote_data_count{j} = AAMI_thresh_patient_annote_data_count{j} + results.thresh_patient_annote_data_count{AAMI_class_indices{j}(k)};
                        temp = results.thresh_patient_annote_CUR_count{1,AAMI_class_indices{j}(k)};
                        temp(isnan(results.thresh_patient_annote_CUR_count{1,AAMI_class_indices{j}(k)})) = 0;
                        AAMI_thresh_patient_CUR_rep{j} = AAMI_thresh_patient_CUR_rep{j} + temp;
                    end
                    
                    AAMI_thresh_total_annote_rep_distrib(nr,j) = sum(AAMI_thresh_patient_annote_data_count{j} > 0);
                    AAMI_thresh_total_annote_CUR_found(nr,j) = sum(AAMI_thresh_patient_CUR_rep{j} > 0,2);
                    AAMI_thresh_annote_percent_correct(nr,j) = (AAMI_thresh_total_annote_CUR_found(nr,j)/AAMI_thresh_total_annote_rep_distrib(nr,j))*100;
                end
                
                clear AAMI_patient_annote_data_count AAMI_patient_CUR_rep AAMI_thresh_patient_annote_data_count AAMI_thresh_patient_CUR_rep ...
                    
            end
        end
        
        
        % Save noiseless results
        if ns == 4
            
            fid_thresh = ['MIT_AAMI_CUR_percent_correct_results_with_count_threshold_no_noise_' peak_detect{pd} '_peak_detect.txt'];
            fileID = fopen(fid_thresh,'w');
            fprintf(fileID, 'thresh & %.5g & %.5g & %.5g & %.5g & %.5g \\ \n', [AAMI_thresh_annote_percent_correct(:,1), AAMI_thresh_annote_percent_correct(:,2), AAMI_thresh_annote_percent_correct(:,3), AAMI_thresh_annote_percent_correct(:,4), AAMI_thresh_annote_percent_correct(:,5)]);
            fclose(fileID);
            
            fid = ['MIT_AAMI_CUR_percent_correct_results_no_noise_' peak_detect{pd} '_peak_detect.txt'];
            fileID = fopen(fid,'w');
            fprintf(fileID,'full & %.5g & %.5g & %.5g & %.5g & %.5g \\ \n', [AAMI_annote_percent_correct(:,1), AAMI_annote_percent_correct(:,2), AAMI_annote_percent_correct(:,3), AAMI_annote_percent_correct(:,4), AAMI_annote_percent_correct(:,5)]);
            fclose(fileID);
        else
            
            % Plot noise results
            color_options{1} = 'b';
            color_options{2} = [0 .7 .7];
            color_options{3} = 'r';
            color_options{4} = 'k';
            color_options{5} = [.7 0 .7];
            
            
            marker_options{1} = 's';
            marker_options{2} = '*';
            marker_options{3} = '^';
            marker_options{4} = 'd';
            marker_options{5} = 'o';
            
            
            if pd == 1
                peak_detect_text = 'Original Beat Labels';
            elseif pd == 2
                peak_detect_text = 'Basic Peak Detection';
            end
            
            figure(noise_figure)
            subplot(2,2,ns)
            for pl = 1:length(AAMI_class_indices)
                plot(SNR,AAMI_annote_percent_correct(:,pl),':','color',color_options{pl},'marker',marker_options{pl},'markersize',8,'linewidth',2)
                xlim([-10,28])
                ylim([-5,105])
                hold on
                plot(SNR,AAMI_thresh_annote_percent_correct(:,pl),'color',color_options{pl},'marker',marker_options{pl},'markersize',8,'linewidth',2)
                xlim([-10,28])
                ylim([-5,105])
                hold on
            end
            xlabel('SNR','fontsize',14,'interpreter','latex')
            ylabel('Percent Detection','fontsize',14,'interpreter','latex')
            title([noise_type{ns} ' Noise '],'fontsize',16,'interpreter','latex')
            set(gca,'fontsize',12)
            
            
            andper = repmat('&',length(SNR),1);
            endline = repmat('\\',length(SNR),1);
            % Save results for cases with 3 or more beats present under
            % original PhysioNet labeling system
            table_thresh_results = table(andper,AAMI_thresh_annote_percent_correct(:,1),andper,AAMI_thresh_annote_percent_correct(:,2),andper,AAMI_thresh_annote_percent_correct(:,3),andper,AAMI_thresh_annote_percent_correct(:,4),andper,AAMI_thresh_annote_percent_correct(:,5),endline);
            writetable(table_thresh_results,['MIT_AAMI_CUR_percent_correct_results_with_count_threshold_' noise_type{ns} '_noise_' peak_detect{pd} '_peak_detect'],'Delimiter',' ','WriteRowNames',true)
            
            % Save results on whole data set
            table_full_results = table(andper,AAMI_annote_percent_correct(:,1),andper,AAMI_annote_percent_correct(:,2),andper,AAMI_annote_percent_correct(:,3),andper,AAMI_annote_percent_correct(:,4),andper,AAMI_annote_percent_correct(:,5),endline);
            writetable(table_full_results,['MIT_AAMI_CUR_percent_correct_results_' noise_type{ns} '_noise_' peak_detect{pd} '_peak_detect'],'Delimiter',' ','WriteRowNames',true)
            
            clear AAMI_patient_annote_data_count AAMI_patient_CUR_rep AAMI_total_annote_rep_distrib AAMI_total_annote_CUR_found ...
                AAMI_annote_percent_correct AAMI_thresh_patient_annote_data_count AAMI_thresh_patient_CUR_rep AAMI_thresh_total_annote_rep_distrib ...
                AAMI_thresh_total_annote_CUR_found AAMI_thresh_annote_percent_correct table_thresh_results table_full_results
        end
    end
    
    % Add legend and master title to figure
    figure(noise_figure)
    leg = legend({'$\hat{N}$ (full)', '$\hat{N}$ ($\geq 3$)', '$\hat{S}$ (full)', '$\hat{S}$ ($\geq 3$)', '$\hat{V}$ (full)', '$\hat{V}$ ($\geq 3$)', '$\hat{F}$ (full)', '$\hat{F}$ ($\geq 3$)', '$\hat{Q}$ (full)', '$\hat{Q}$ ($\geq 3$)'},'fontsize',12,'position',[0.696 0.121 0.091 0.279],'interpreter','latex');
    suptitle(['AAMI Class Detection with ' peak_detect_text])
    
end

