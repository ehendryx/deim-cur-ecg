% This script generates AAMI and AAMI2 annotation results from the results
% generated by MIT_CUR_total_rep_results.m with flutter wave exclusion.
% Records with paced beats are excluded from the final results.

% This code is under a 3-Clause BSD License.
% Copyright 2017, E. Hendryx
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

load('MIT_CUR_no_flutter_correct_annotation_ident_results.mat')

% MIT-BIH paced beat file indices
paced = [3 5 8 37]; % corresponds to patient IDs 102, 104, 107, and 217
full_indices = 1:48;

% Keep records without paced beats
not_paced_indices = full_indices(~ismember(full_indices,paced));

% Loaded results should have the following fields (as well as corresponding
% results for only those annotaions represented by 3 or more beats)
% % results.patient_beat_count % number of beats considered for each patient
% % results.total_annotations % the beat annotations present in this data set
% % results.patient_annote_data_count % the number of beats with a particular annotation per patient
% % results.total_annote_data_count % total number of beats with a particular annotation in the data set
% % results.patient_annote_CUR_rep % whether or not a patient has an annotation represented in CUR results
% % results.patient_annote_CUR_count % number of beats with an annotation selected in CUR
% % results.total_annote_rep_distrib  % how many patients have an annotation
% % results.total_annote_CUR_found  % how many patients have an annotation represented in CUR results
% % results.total_annote_percent_correct  % fraction of patients with annotation that have it represented in CUR results


% AAMI Classes:
% % N = N, L, R, e, j
% % S = A, a, J, S
% % V = V, E
% % F = F
% % Q = /, f, Q

% AAMI2 Classes:
% % N = N, L, R, e, j
% % S = A, a, J, S
% % V = V, E, F
% % Q = /, f, Q

AAMI_class_indices{1} = [];
AAMI_class_indices{2} = [];
AAMI_class_indices{3} = [];
AAMI_class_indices{4} = [];
AAMI_class_indices{5} = [];

AAMI2_class_indices{1} = [];
AAMI2_class_indices{2} = [];
AAMI2_class_indices{3} = [];
AAMI2_class_indices{4} = [];

% The CUR tolerances used in generating results (recall that these values
% are divided by 10 prior to being input into the incremental QR code)
CUR_stopping_tol = [.5,.1,5e-2,1e-2,5e-3,1e-3,5e-4,1e-4];

% Find index mapping from original PhysioNet labels to AAMI and AAMI2
% systems
for i = 1:length(results.total_annotations)
    if strcmp(results.total_annotations{i},'N') || strcmp(results.total_annotations{i},'L') || strcmp(results.total_annotations{i},'R') || strcmp(results.total_annotations{i},'e') || strcmp(results.total_annotations{i},'j')
        AAMI_class_indices{1} = [AAMI_class_indices{1} i];
        AAMI2_class_indices{1} = [AAMI2_class_indices{1} i];
    elseif strcmp(results.total_annotations{i},'A') || strcmp(results.total_annotations{i},'a') || strcmp(results.total_annotations{i},'J') || strcmp(results.total_annotations{i},'S')
        AAMI_class_indices{2} = [AAMI_class_indices{2} i];
        AAMI2_class_indices{2} = [AAMI2_class_indices{2} i];
    elseif strcmp(results.total_annotations{i},'V') || strcmp(results.total_annotations{i},'E')
        AAMI_class_indices{3} = [AAMI_class_indices{3} i]; 
        AAMI2_class_indices{3} = [AAMI2_class_indices{3} i];
    elseif strcmp(results.total_annotations{i},'F')
        AAMI_class_indices{4} = [AAMI_class_indices{4} i];
        AAMI2_class_indices{3} = [AAMI2_class_indices{3} i];
    elseif strcmp(results.total_annotations{i},'/') || strcmp(results.total_annotations{i},'f') || strcmp(results.total_annotations{i},'Q')
        AAMI_class_indices{5} = [AAMI_class_indices{5} i];
        AAMI2_class_indices{4} = [AAMI2_class_indices{4} i];
    else
        display('missing class')
    end
end

%% Translate results from CUR beat selection to AAMI scheme
AAMI_patient_annote_data_count = cell(1,5);
AAMI_patient_CUR_rep = cell(1,5);

for j = 1:length(AAMI_class_indices)
    AAMI_patient_annote_data_count{j} = zeros(1,44);
    AAMI_patient_CUR_rep{j} = zeros(length(CUR_stopping_tol),44);
    for k = 1:length(AAMI_class_indices{j})
        AAMI_patient_annote_data_count{j} = AAMI_patient_annote_data_count{j} + results.patient_annote_data_count{AAMI_class_indices{j}(k)}(not_paced_indices);
        temp = results.patient_annote_CUR_count{1,AAMI_class_indices{j}(k)}(:,not_paced_indices);
        temp(isnan(results.patient_annote_CUR_count{1,AAMI_class_indices{j}(k)}(:,not_paced_indices))) = 0;
        AAMI_patient_CUR_rep{j} = AAMI_patient_CUR_rep{j} + temp;
    end
    
    AAMI_total_annote_rep_distrib(j) = sum(AAMI_patient_annote_data_count{j} > 0);
    AAMI_total_annote_CUR_found(:,j) = sum(AAMI_patient_CUR_rep{j} > 0,2);
    AAMI_annote_percent_correct(:,j) = (AAMI_total_annote_CUR_found(:,j)/AAMI_total_annote_rep_distrib(j))*100;
end

% Considering only those files w/ 3 or more class representatives present
% under original PhysioNet labeling
AAMI_thresh_patient_annote_data_count = cell(1,5);
AAMI_thresh_patient_CUR_rep = cell(1,5);

for j = 1:length(AAMI_class_indices)
    AAMI_thresh_patient_annote_data_count{j} = zeros(1,44);
    AAMI_thresh_patient_CUR_rep{j} = zeros(length(CUR_stopping_tol),44);
    for k = 1:length(AAMI_class_indices{j})
        AAMI_thresh_patient_annote_data_count{j} = AAMI_thresh_patient_annote_data_count{j} + results.thresh_patient_annote_data_count{AAMI_class_indices{j}(k)}(not_paced_indices);
        temp = results.thresh_patient_annote_CUR_count{1,AAMI_class_indices{j}(k)}(:,not_paced_indices);
        temp(isnan(results.thresh_patient_annote_CUR_count{1,AAMI_class_indices{j}(k)}(:,not_paced_indices))) = 0;
        AAMI_thresh_patient_CUR_rep{j} = AAMI_thresh_patient_CUR_rep{j} + temp;
    end
    
    AAMI_thresh_total_annote_rep_distrib(j) = sum(AAMI_thresh_patient_annote_data_count{j} > 0);
    AAMI_thresh_total_annote_CUR_found(:,j) = sum(AAMI_thresh_patient_CUR_rep{j} > 0,2);
    AAMI_thresh_annote_percent_correct(:,j) = (AAMI_thresh_total_annote_CUR_found(:,j)/AAMI_thresh_total_annote_rep_distrib(j))*100;
end

andper = repmat('&',length(CUR_stopping_tol),1);
endline = repmat('\\',length(CUR_stopping_tol),1);
table_thresh_results = table(andper,AAMI_thresh_annote_percent_correct(:,1),andper,AAMI_thresh_annote_percent_correct(:,2),andper,AAMI_thresh_annote_percent_correct(:,3),andper,AAMI_thresh_annote_percent_correct(:,4),andper,AAMI_thresh_annote_percent_correct(:,5),endline);
writetable(table_thresh_results,'MIT_no_flutter_nonpaced_AAMI_CUR_percent_correct_results_with_count_threshold','Delimiter',' ','WriteRowNames',true)

table_full_results = table(andper,AAMI_annote_percent_correct(:,1),andper,AAMI_annote_percent_correct(:,2),andper,AAMI_annote_percent_correct(:,3),andper,AAMI_annote_percent_correct(:,4),andper,AAMI_annote_percent_correct(:,5),endline);
writetable(table_full_results,'MIT_no_flutter_nonpaced_AAMI_CUR_percent_correct_results','Delimiter',' ','WriteRowNames',true)

%% Translate results from CUR beat selection to AAMI2 scheme
AAMI2_patient_annote_data_count = cell(1,4);
AAMI2_patient_CUR_rep = cell(1,4);

for j = 1:length(AAMI2_class_indices)
    AAMI2_patient_annote_data_count{j} = zeros(1,44);
    AAMI2_patient_CUR_rep{j} = zeros(length(CUR_stopping_tol),44);
    for k = 1:length(AAMI2_class_indices{j})
        AAMI2_patient_annote_data_count{j} = AAMI2_patient_annote_data_count{j} + results.patient_annote_data_count{AAMI2_class_indices{j}(k)}(not_paced_indices);
        temp = results.patient_annote_CUR_count{1,AAMI2_class_indices{j}(k)}(:,not_paced_indices);
        temp(isnan(results.patient_annote_CUR_count{1,AAMI2_class_indices{j}(k)}(:,not_paced_indices))) = 0;
        AAMI2_patient_CUR_rep{j} = AAMI2_patient_CUR_rep{j} + temp;
    end
    
    AAMI2_total_annote_rep_distrib(j) = sum(AAMI2_patient_annote_data_count{j} > 0);
    AAMI2_total_annote_CUR_found(:,j) = sum(AAMI2_patient_CUR_rep{j} > 0,2);
    AAMI2_annote_percent_correct(:,j) = (AAMI2_total_annote_CUR_found(:,j)/AAMI2_total_annote_rep_distrib(j))*100;
end

% Considering only those files w/ 3 or more class representatives present
% under original PhysioNet labeling
AAMI2_thresh_patient_annote_data_count = cell(1,4);
AAMI2_thresh_patient_CUR_rep = cell(1,4);

for j = 1:length(AAMI2_class_indices)
    AAMI2_thresh_patient_annote_data_count{j} = zeros(1,44);
    AAMI2_thresh_patient_CUR_rep{j} = zeros(length(CUR_stopping_tol),44);
    for k = 1:length(AAMI2_class_indices{j})
        AAMI2_thresh_patient_annote_data_count{j} = AAMI2_thresh_patient_annote_data_count{j} + results.thresh_patient_annote_data_count{AAMI2_class_indices{j}(k)}(not_paced_indices);
        temp = results.thresh_patient_annote_CUR_count{1,AAMI2_class_indices{j}(k)}(:,not_paced_indices);
        temp(isnan(results.thresh_patient_annote_CUR_count{1,AAMI2_class_indices{j}(k)}(:,not_paced_indices))) = 0;
        AAMI2_thresh_patient_CUR_rep{j} = AAMI2_thresh_patient_CUR_rep{j} + temp;
    end
    
    AAMI2_thresh_total_annote_rep_distrib(j) = sum(AAMI2_thresh_patient_annote_data_count{j} > 0);
    AAMI2_thresh_total_annote_CUR_found(:,j) = sum(AAMI2_thresh_patient_CUR_rep{j} > 0,2);
    AAMI2_thresh_annote_percent_correct(:,j) = (AAMI2_thresh_total_annote_CUR_found(:,j)/AAMI2_thresh_total_annote_rep_distrib(j))*100;
end

andper = repmat('&',length(CUR_stopping_tol),1);
endline = repmat('\\',length(CUR_stopping_tol),1);
table_thresh_results = table(andper,AAMI2_thresh_annote_percent_correct(:,1),andper,AAMI2_thresh_annote_percent_correct(:,2),andper,AAMI2_thresh_annote_percent_correct(:,3),andper,AAMI2_thresh_annote_percent_correct(:,4),endline);
writetable(table_thresh_results,'MIT_no_flutter_nonpaced_AAMI2_CUR_percent_correct_results_with_count_threshold','Delimiter',' ','WriteRowNames',true)

table_full_results = table(andper,AAMI2_annote_percent_correct(:,1),andper,AAMI2_annote_percent_correct(:,2),andper,AAMI2_annote_percent_correct(:,3),andper,AAMI2_annote_percent_correct(:,4),endline);
writetable(table_full_results,'MIT_no_flutter_nonpaced_AAMI2_CUR_percent_correct_results','Delimiter',' ','WriteRowNames',true)



        
        